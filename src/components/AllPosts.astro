---
interface Years {
  [year: number]: Post[];
}
interface Post {
  title: string;
  date: Date;
  url: string;
}

const posts = await Astro.glob("../pages/posts/*.mdx");
const years = {} as Years;

posts.map((post) => {
  const date = new Date(post.frontmatter.date);
  years[date.getFullYear()] = [
    ...(years[date.getFullYear()] || []),
    { title: post.frontmatter.title, date, url: post.url },
  ];
});

/**
 * TODO: make year unchanged by hover selector
 */
---

<section
  class="not-prose flex-col hover:text-neutral-500/50 transition-all ease-in-out duration-200"
>
  {
    Object.entries(years)
      .reverse()
      .map((year) => {
        return (
          <div class="flex group flex-row border-b first:border-t py-2 border-neutral-300">
            <h2 class="w-1/2 group-hover:text-neutral-800 text-sm text-neutral-500">
              {year[0]}
            </h2>
            <div class="flex flex-col text-left w-full">
              {year[1].map((post: Post) => {
                return (
                  <a
                    href={post.url}
                    class="flex py-2 w-full justify-between border-b border-neutral-300 last:border-none hover:text-neutral-800"
                  >
                    <h3>{post.title}</h3>
                    <time>
                      {new Intl.DateTimeFormat("en-GB", {
                        day: "2-digit",
                        month: "2-digit",
                      }).format(post.date)}
                    </time>
                  </a>
                );
              })}
            </div>
          </div>
        );
      })
  }
</section>
